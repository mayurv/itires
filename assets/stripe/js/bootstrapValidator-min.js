/**
 * BootstrapValidator (http://bootstrapvalidator.com)
 *
 * A jQuery plugin to validate form fields. Use with Bootstrap 3
 *
 * @version     v0.4.4-dev
 * @author      https://twitter.com/nghuuphuoc
 * @copyright   (c) 2013 - 2014 Nguyen Huu Phuoc
 * @license     MIT
 */

!function(a){var b = function(c, d){this.$form = a(c), this.options = a.extend({}, b.DEFAULT_OPTIONS, d), this.$invalidField = null, this.$submitButton = null, this.STATUS_NOT_VALIDATED = "NOT_VALIDATED", this.STATUS_VALIDATING = "VALIDATING", this.STATUS_INVALID = "INVALID", this.STATUS_VALID = "VALID"; var e = function(){for (var a = 3, b = document.createElement("div"), c = b.all || []; b.innerHTML = "<!--[if gt IE " + ++a + "]><br><![endif]-->", c[0]; ); return a > 4?a:!a}(), f = document.createElement("div"); this._changeEvent = 9 !== e && "oninput"in f?"input":"keyup", this._submitIfValid = null, this._init()}; b.DEFAULT_OPTIONS = {elementClass:"bootstrap-validator-form", message:"This value is not valid", excluded:[":disabled", ":hidden", ":not(:visible)"], feedbackIcons:{valid:null, invalid:null, validating:null}, submitButtons:'button[type="submit"]', submitHandler:null, live:"enabled", fields:null}, b.prototype = {constructor:b, _init:function(){var b, c, d, e, f, g, h, i = this, j = {excluded:this.$form.attr("data-bv-excluded"), trigger:this.$form.attr("data-bv-trigger"), message:this.$form.attr("data-bv-message"), submitButtons:this.$form.attr("data-bv-submitbuttons"), live:this.$form.attr("data-bv-live"), fields:{}, feedbackIcons:{valid:this.$form.attr("data-bv-feedbackicons-valid"), invalid:this.$form.attr("data-bv-feedbackicons-invalid"), validating:this.$form.attr("data-bv-feedbackicons-validating")}}; this.$form.attr("novalidate", "novalidate").addClass(this.options.elementClass).on("submit.bv", function(a){a.preventDefault(), i.validate()}).on("click", this.options.submitButtons, function(){i.$submitButton = a(this), i._submitIfValid = !0}).find("[name], [data-bv-field]").each(function(){var i = a(this); if ("hidden" != i.attr("type")){var k = i.attr("name") || i.attr("data-bv-field"); i.attr("data-bv-field", k), j.fields[k] = a.extend({}, {trigger:i.attr("data-bv-trigger"), message:i.attr("data-bv-message"), container:i.attr("data-bv-container"), selector:i.attr("data-bv-selector"), validators:{}}, j.fields[k]); for (c in a.fn.bootstrapValidator.validators)if (b = a.fn.bootstrapValidator.validators[c], d = i.attr("data-bv-" + c.toLowerCase()) + "", h = "function" == typeof b.enableByHtml5?b.enableByHtml5(a(this)):null, h && "false" != d || h !== !0 && ("" == d || "true" == d)){b.html5Attributes = b.html5Attributes || {message:"message"}, j.fields[k].validators[c] = a.extend({}, 1 == h?{}:h, j.fields[k].validators[c]); for (g in b.html5Attributes)e = b.html5Attributes[g], f = i.attr("data-bv-" + c.toLowerCase() + "-" + g), f && ("true" == f?f = !0:"false" == f && (f = !1), j.fields[k].validators[c][e] = f)}}}), this.options = a.extend(!0, this.options, j), "string" == typeof this.options.excluded && (this.options.excluded = a.map(this.options.excluded.split(","), function(b){return a.trim(b)})); for (var k in this.options.fields)this._initField(k); this.setLiveMode(this.options.live)}, _initField:function(b){if (null != this.options.fields[b] && null != this.options.fields[b].validators){var c = this.getFieldElements(b); if (null == c)return void delete this.options.fields[b]; for (var d in this.options.fields[b].validators)a.fn.bootstrapValidator.validators[d] || delete this.options.fields[b].validators[d]; for (var e = this, f = c.attr("type"), g = "radio" == f || "checkbox" == f || "file" == f || "SELECT" == c[0].tagName?"change":e._changeEvent, h = c.length, i = 1 == h || "radio" == f || "checkbox" == f, j = 0; h > j; j++){var k = a(c[j]), l = k.parents(".form-group"), m = this.options.fields[b].container?l.find(this.options.fields[b].container):this._getMessageContainer(k); this.options.fields[b].selector && k.attr("data-bv-field", b), k.on(g + ".update.bv", function(){e._submitIfValid = !1, i?e.updateStatus(b, e.STATUS_NOT_VALIDATED, null):e.updateElementStatus(a(this), e.STATUS_NOT_VALIDATED, null)}), k.data("bv.messages", m); for (d in this.options.fields[b].validators)k.data("bv.result." + d, this.STATUS_NOT_VALIDATED), i && j != h - 1 || a("<small/>").css("display", "none").attr("data-bv-validator", d).html(this.options.fields[b].validators[d].message || this.options.fields[b].message || this.options.message).addClass("help-block").appendTo(m); if (this.options.feedbackIcons && this.options.feedbackIcons.validating && this.options.feedbackIcons.invalid && this.options.feedbackIcons.valid && (!i || j == h - 1)){l.addClass("has-feedback"); var n = a("<i/>").css("display", "none").addClass("form-control-feedback").attr("data-bv-field", b).insertAfter(k); 0 == l.find("label").length && n.css("top", 0)}}null == this.options.fields[b].enabled && (this.options.fields[b].enabled = !0)}}, _getMessageContainer:function(a){var b = a.parent(); if (b.hasClass("form-group"))return b; var c = b.attr("class"); if (!c)return this._getMessageContainer(b); c = c.split(" "); for (var d = c.length, e = 0; d > e; e++)if (/^col-(xs|sm|md|lg)-\d+$/.test(c[e]) || /^col-(xs|sm|md|lg)-offset-\d+$/.test(c[e]))return b; return this._getMessageContainer(b)}, _submit:function(){if (this.isValid())this.options.submitHandler && "function" == typeof this.options.submitHandler?this.options.submitHandler.call(this, this, this.$form, this.$submitButton):this.disableSubmitButtons(!0).defaultSubmit(); else if ("submitted" == this.options.live && this.setLiveMode("enabled"), this.$invalidField){var b, c = this.$invalidField.parents(".tab-pane"); c && (b = c.attr("id")) && a('a[href="#' + b + '"][data-toggle="tab"]').trigger("click.bs.tab.data-api"), this.$invalidField.focus()}}, _isExcluded:function(a){if (this.options.excluded)for (var b in this.options.excluded)if ("string" == typeof this.options.excluded[b] && a.is(this.options.excluded[b]) || "function" == typeof this.options.excluded[b] && 1 == this.options.excluded[b].call(this, a, this))return!0; return!1}, getFieldElements:function(b){var c = this.options.fields[b].selector?a(this.options.fields[b].selector):this.$form.find('[name="' + b + '"]'); return 0 == c.length?null:c}, setLiveMode:function(b){if (this.options.live = b, "submitted" == b)return this; var c = this; for (var d in this.options.fields)!function(e){var f = c.getFieldElements(e); if (f)for (var g = f.attr("type"), h = f.length, i = 1 == h || "radio" == g || "checkbox" == g, j = c.options.fields[d].trigger || c.options.trigger || ("radio" == g || "checkbox" == g || "file" == g || "SELECT" == f[0].tagName?"change":c._changeEvent), k = a.map(j.split(" "), function(a){return a + ".live.bv"}).join(" "), l = 0; h > l; l++)"enabled" == b?a(f[l]).on(k, function(){i?c.validateField(e):c.validateFieldElement(a(this), !1)}):a(f[l]).off(k)}(d); return this}, disableSubmitButtons:function(a){return a?"disabled" != this.options.live && this.$form.find(this.options.submitButtons).attr("disabled", "disabled"):this.$form.find(this.options.submitButtons).removeAttr("disabled"), this}, validate:function(){if (!this.options.fields)return this; this.disableSubmitButtons(!0); for (var a in this.options.fields)this.validateField(a); return this.$submitButton && this._submit(), this}, validateField:function(b){for (var c = this.getFieldElements(b), d = c.attr("type"), e = "radio" == d || "checkbox" == d?1:c.length, f = 0; e > f; f++)this.validateFieldElement(a(c[f]), 1 == e); return this}, validateFieldElement:function(b, c){var d, e, f = this, g = b.attr("data-bv-field"), h = this.options.fields[g].validators; if (!this.options.fields[g].enabled || this._isExcluded(b))return this; for (d in h){b.data("bv.dfs." + d) && b.data("bv.dfs." + d).reject(); var i = b.data("bv.result." + d); i != this.STATUS_VALID && i != this.STATUS_INVALID && (b.data("bv.result." + d, this.STATUS_VALIDATING), e = a.fn.bootstrapValidator.validators[d].validate(this, b, h[d]), "object" == typeof e?(c?this.updateStatus(g, this.STATUS_VALIDATING, d):this.updateElementStatus(b, this.STATUS_VALIDATING, d), b.data("bv.dfs." + d, e), e.done(function(a, b, d){a.removeData("bv.dfs." + b), c?f.updateStatus(a.attr("data-bv-field"), d?f.STATUS_VALID:f.STATUS_INVALID, b):f.updateElementStatus(a, d?f.STATUS_VALID:f.STATUS_INVALID, b), d && 1 == f._submitIfValid && f._submit()})):"boolean" == typeof e && (c?this.updateStatus(g, e?this.STATUS_VALID:this.STATUS_INVALID, d):this.updateElementStatus(b, e?this.STATUS_VALID:this.STATUS_INVALID, d)))}return this}, updateStatus:function(b, c, d){for (var e = this.getFieldElements(b), f = e.attr("type"), g = "radio" == f || "checkbox" == f?1:e.length, h = 0; g > h; h++)this.updateElementStatus(a(e[h]), c, d); return this}, updateElementStatus:function(b, c, d){var e = this, f = b.attr("data-bv-field"), g = b.parents(".form-group"), h = b.data("bv.messages"), i = g.find(".help-block[data-bv-validator]"), j = h.find(".help-block[data-bv-validator]"), k = g.find('.form-control-feedback[data-bv-field="' + f + '"]'); if (d)b.data("bv.result." + d, c); else for (var l in this.options.fields[f].validators)b.data("bv.result." + l, c); switch (c){case this.STATUS_VALIDATING:this.disableSubmitButtons(!0), g.removeClass("has-success").removeClass("has-error"), d?j.filter('.help-block[data-bv-validator="' + d + '"]').hide():j.hide(), k && k.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).addClass(this.options.feedbackIcons.validating).show(); break; case this.STATUS_INVALID:this.disableSubmitButtons(!0), g.removeClass("has-success").addClass("has-error"), d?j.filter('[data-bv-validator="' + d + '"]').show():j.show(), k && k.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.validating).addClass(this.options.feedbackIcons.invalid).show(); break; case this.STATUS_VALID:d?j.filter('[data-bv-validator="' + d + '"]').hide():j.hide(); var m = 0 == j.filter(function(){var c = a(this).css("display"), d = a(this).attr("data-bv-validator"); return"block" == c || b.data("bv.result." + d) != e.STATUS_VALID}).length; this.disableSubmitButtons(m?!1:!0), k && k.removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).removeClass(this.options.feedbackIcons.valid).addClass(m?this.options.feedbackIcons.valid:this.options.feedbackIcons.invalid).show(); var n = 0 == i.filter(function(){var c = a(this).css("display"), d = a(this).attr("data-bv-validator"); return"block" == c || b.data("bv.result." + d) != e.STATUS_VALID}).length; g.removeClass("has-error has-success").addClass(n?"has-success":"has-error"); break; case this.STATUS_NOT_VALIDATED:default:this.disableSubmitButtons(!1), g.removeClass("has-success").removeClass("has-error"), d?j.filter('.help-block[data-bv-validator="' + d + '"]').hide():j.hide(), k && k.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).hide()}return this}, isValid:function(){var b, c, d, e, f, g, h, i; for (c in this.options.fields)if (null != this.options.fields[c] && this.options.fields[c].enabled)for (b = this.getFieldElements(c), e = b.attr("type"), h = "radio" == e || "checkbox" == e?1:b.length, i = 0; h > i; i++)if (d = a(b[i]), !this._isExcluded(d))for (g in this.options.fields[c].validators){if (f = d.data("bv.result." + g), f == this.STATUS_NOT_VALIDATED || f == this.STATUS_VALIDATING)return!1; if (f == this.STATUS_INVALID)return this.$invalidField = d, !1}return!0}, defaultSubmit:function(){this.$form.off("submit.bv").submit()}, resetForm:function(b){var c, d, e, f, g; for (c in this.options.fields){d = this.getFieldElements(c), e = d.length; for (var h = 0; e > h; h++)for (g in this.options.fields[c].validators)a(d[h]).removeData("bv.dfs." + g); this.updateStatus(c, this.STATUS_NOT_VALIDATED, null), b && (f = d.attr("type"), "radio" == f || "checkbox" == f?d.removeAttr("checked").removeAttr("selected"):d.val(""))}return this.$invalidField = null, this.$submitButton = null, this.disableSubmitButtons(!1), this}, enableFieldValidators:function(a, b){return this.options.fields[a].enabled = b, this.updateStatus(a, this.STATUS_NOT_VALIDATED, null), this}}, a.fn.bootstrapValidator = function(c, d){return this.each(function(){var e = a(this), f = e.data("bootstrapValidator"), g = "object" == typeof c && c; f || (f = new b(this, g), e.data("bootstrapValidator", f)), "string" == typeof c && f[c](d)})}, a.fn.bootstrapValidator.validators = {}, a.fn.bootstrapValidator.Constructor = b, a.fn.bootstrapValidator.helpers = {luhn:function(a){for (var b = a.length, c = 0, d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]], e = 0; b--; )e += d[c][parseInt(a.charAt(b), 10)], c ^= 1; return e % 10 === 0 && e > 0}}}(window.jQuery), function(a){a.fn.bootstrapValidator.validators.base64 = {validate:function(a, b){var c = b.val(); return"" == c?!0:/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/.test(c)}}}(window.jQuery), function(a){a.fn.bootstrapValidator.validators.between = {html5Attributes:{message:"message", min:"min", max:"max", inclusive:"inclusive"}, enableByHtml5:function(a){return"range" == a.attr("type")?{min:a.attr("min"), max:a.attr("max")}:!1}, validate:function(a, b, c){var d = b.val(); return"" == d?!0:(d = parseFloat(d), c.inclusive === !0?d > c.min && d < c.max:d >= c.min && d <= c.max)}}}(window.jQuery), function(a){a.fn.bootstrapValidator.validators.callback = {validate:function(b, c, d){var e = c.val(); if (d.callback && "function" == typeof d.callback){var f = new a.Deferred; return f.resolve(c, "callback", d.callback.call(this, e, b)), f}return!0}}}(window.jQuery), function(a){a.fn.bootstrapValidator.validators.choice = {html5Attributes:{message:"message", min:"min", max:"max"}, validate:function(a, b, c){var d = b.is("select")?a.getFieldElements(b.attr("data-bv-field")).find("option").filter(":selected").length:a.getFieldElements(b.attr("data-bv-field")).filter(":checked").length; return c.min && d < c.min || c.max && d > c.max?!1:!0}}}(window.jQuery), function(a){a.fn.bootstrapValidator.validators.creditCard = {validate:function(b, c){var d = c.val(); if ("" == d)return!0; if (/[^0-9-\s]+/.test(d))return!1; if (d = d.replace(/\D/g, ""), !a.fn.bootstrapValidator.helpers.luhn(d))return!1; var e, f, g = {AMERICAN_EXPRESS:{length:[15], prefix:["34", "37"]}, DINERS_CLUB:{length:[14], prefix:["300", "301", "302", "303", "304", "305", "36"]}, DINERS_CLUB_US:{length:[16], prefix:["54", "55"]}, DISCOVER:{length:[16], prefix:["6011", "622126", "622127", "622128", "622129", "62213", "62214", "62215", "62216", "62217", "62218", "62219", "6222", "6223", "6224", "6225", "6226", "6227", "6228", "62290", "62291", "622920", "622921", "622922", "622923", "622924", "622925", "644", "645", "646", "647", "648", "649", "65"]}, JCB:{length:[16], prefix:["3528", "3529", "353", "354", "355", "356", "357", "358"]}, LASER:{length:[16, 17, 18, 19], prefix:["3528", "3529", "353", "354", "355", "356", "357", "358"]}, MAESTRO:{length:[12, 13, 14, 15, 16, 17, 18, 19], prefix:["5018", "5020", "5038", "6304", "6759", "6761", "6762", "6763", "6764", "6765", "6766"]}, MASTERCARD:{length:[16], prefix:["51", "52", "53", "54", "55"]}, SOLO:{length:[16, 18, 19], prefix:["6334", "6767"]}, UNIONPAY:{length:[16, 17, 18, 19], prefix:["622126", "622127", "622128", "622129", "62213", "62214", "62215", "62216", "62217", "62218", "62219", "6222", "6223", "6224", "6225", "6226", "6227", "6228", "62290", "62291", "622920", "622921", "622922", "622923", "622924", "622925"]}, VISA:{length:[16], prefix:["4"]}}; for (e in g)for (f in g[e].prefix)if (d.substr(0, g[e].prefix[f].length) == g[e].prefix[f] && - 1 != g[e].length.indexOf(d.length))return!0; return!1}}}(window.jQuery), function(a){a.fn.bootstrapValidator.validators.cvv = {html5Attributes:{message:"message", ccfield:"creditCardField"}, validate:function(a, b, c){var d = b.val(); if ("" == d)return!0; if (!/^[0-9]{3,4}$/.test(d))return!1; if (!c.creditCardField)return!0; var e = a.getFieldElements(c.creditCardField).val(); if ("" == e)return!0; var f, g, h = {AMERICAN_EXPRESS:{length:[15], prefix:["34", "37"]}, DINERS_C